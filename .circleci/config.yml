version: 2.1

executors:
  kotlin-executor:
    docker:
      - image: cimg/openjdk@sha256:3b3a7c21b4e94628ce8d1a460e7dca0b9ab6541bf165cfb53a22dea6d340d6d2
    resource_class: large

jobs:
  setup:
    executor: kotlin-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: default
      - run:
          name: Create initial password file for Neo4j
          command: echo "NEO4J_AUTH=neo4j/bacco4321" > initial-password.env
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .

  build:
    executor: kotlin-executor
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Setup environment
          command: |
            sudo apt-get update
            sudo apt-get install -y lib32stdc++6 curl
      - run:
          name: Change permissions of gradlew
          command: sudo chmod +x ./gradlew
      - run:
          name: Ensure properties file exists for tests
          command: |
            mkdir -p src/test/resources
            touch src/test/resources/application-test.properties
      - run:
          name: Ensure properties file exists for dev
          command: |
            mkdir -p src/main/resources
            touch src/main/resources/application.properties
      - run:
          name: Update application-test.properties
          command: |
            echo "spring.neo4j.uri=bolt://project-neo4j:7687" > src/test/resources/application-test.properties
            echo "spring.neo4j.authentication.username=neo4j" >> src/test/resources/application-test.properties
            echo "spring.neo4j.authentication.password=bacco4321" >> src/test/resources/application-test.properties
            echo "spring.servlet.multipart.max-file-size=20MB" >> src/test/resources/application-test.properties
            echo "spring.servlet.multipart.max-request-size=20MB" >> src/test/resources/application-test.properties
            echo "spring.profiles.active=test" >> src/test/resources/application-test.properties
      - run:
          name: Update application.properties
          command: |
            echo "spring.neo4j.uri=bolt://project-neo4j:7687" > src/main/resources/application.properties
            echo "spring.neo4j.authentication.username=neo4j" >> src/main/resources/application.properties
            echo "spring.neo4j.authentication.password=bacco4321" >> src/main/resources/application.properties
            echo "spring.servlet.multipart.max-file-size=20MB" >> src/main/resources/application.properties
            echo "spring.servlet.multipart.max-request-size=20MB" >> src/main/resources/application.properties
            echo "spring.profiles.active=dev" >> src/main/resources/application.properties
      - run:
          name: Compile the project
          command: ./gradlew compileKotlin
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - .

  test:
    executor: kotlin-executor
    steps:
      - attach_workspace:
          at: /home/circleci
      - setup_remote_docker:
          version: default
      - run:
          name: Create Docker Network
          command: sudo docker network create project_default
      - run:
          name: Start Neo4j with Docker Compose
          command: sudo docker-compose -f docker-compose.yml up -d neo4j
      - run:
          name: Wait for Neo4j to be fully up and running
          command: |
            echo "Waiting for Neo4j to be fully up and running..."
            for i in {1..20}; do
              if curl -s -u neo4j:bacco4321 http://project-neo4j:7474; then
                echo "Neo4j is up and running."
                break
              fi
              echo "Waiting... $i"
              sleep 10
            done
            sudo docker-compose -f docker-compose.yml logs neo4j
      - run:
          name: Connect Executor to Network
          command: |
            CONTAINER_ID=$(sudo docker ps -q -f ancestor=cimg/openjdk@sha256:3b3a7c21b4e94628ce8d1a460e7dca0b9ab6541bf165cfb53a22dea6d340d6d2)
            sudo docker network connect project_default $CONTAINER_ID
      - run:
          name: Run tests
          command: ./gradlew test --scan --warning-mode all
      - store_artifacts:
          path: build/reports/tests/test
          destination: test-reports

workflows:
  version: 2
  build-and-test:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - test:
          requires:
            - build
