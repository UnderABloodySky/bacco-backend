version: 2.1

executors:
  kotlin-executor:
    docker:
      - image: cimg/openjdk:17.0

jobs:
  setup:
    executor: kotlin-executor
    steps:
      - checkout

      - setup_remote_docker:
          version: 20.10.7

      - run:
          name: Start Neo4j Dev
          command: |
            docker run -d --name dev -p 7687:7687 -e NEO4J_AUTH=neo4j/bacco4321 neo4j:5.12.0

      - run:
          name: Start Neo4j Test
          command: |
            docker run -d --name test -p 7688:7687 -e NEO4J_AUTH=neo4j/bacco4321 neo4j:5.12.0

      - run:
          name: Wait for Neo4j Dev to be fully up and running
          command: |
            echo "Waiting for Neo4j Dev to be fully up and running..."
            for i in {1..120}; do
              if curl -s -u neo4j:bacco4321 http://localhost:7474/browser/; then
                echo "Neo4j Dev is up and running."
                break
              fi
              echo "Waiting..."
              sleep 5
            done

      - run:
          name: Wait for Neo4j Test to be fully up and running
          command: |
            echo "Waiting for Neo4j Test to be fully up and running..."
            for i in {1..120}; do
              if curl -s -u neo4j:bacco4321 http://localhost:7688/browser/; then
                echo "Neo4j Test is up and running."
                break
              fi
              echo "Waiting..."
              sleep 5
            done

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project

  build:
    executor: kotlin-executor
    steps:
      - attach_workspace:
          at: /home/circleci

      - run:
          name: Setup environment
          command: |
            sudo apt-get update
            sudo apt-get install -y lib32stdc++6
            sudo apt-get upgrade

      - run:
          name: Change permissions of gradlew
          command: sudo chmod +x ./gradlew

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-

      - run:
          name: Ensure properties file exists
          command: |
            if [ ! -f src/test/resources/application-test.properties ]; then
              echo "Creating src/test/resources/application-test.properties"
              mkdir -p src/test/resources
              touch src/test/resources/application-test.properties
            fi

      - run:
          name: Update application-test.properties
          command: |
            echo "spring.neo4j.uri=bolt://localhost:7688" > src/test/resources/application-test.properties
            echo "spring.neo4j.authentication.username=neo4j" >> src/test/resources/application-test.properties
            echo "spring.neo4j.authentication.password=bacco4321" >> src/test/resources/application-test.properties
            echo "spring.servlet.multipart.max-file-size=20MB" >> src/test/resources/application-test.properties
            echo "spring.servlet.multipart.max-request-size=20MB" >> src/test/resources/application-test.properties
            echo "spring.profiles.active=test" >> src/test/resources/application-test.properties

      - run:
          name: Ensure properties file exists for dev
          command: |
            if [ ! -f src/main/resources/application.properties ]; then
              echo "Creating src/main/resources/application.properties"
              mkdir -p src/main/resources
              touch src/main/resources/application.properties
            fi

      - run:
          name: Update application-dev.properties
          command: |
            echo "spring.neo4j.uri=bolt://localhost:7687" > src/main/resources/application.properties
            echo "spring.neo4j.authentication.username=neo4j" >> src/main/resources/application.properties
            echo "spring.neo4j.authentication.password=bacco4321" >> src/main/resources/application.properties
            echo "spring.servlet.multipart.max-file-size=20MB" >> src/main/resources/application.properties
            echo "spring.servlet.multipart.max-request-size=20MB" >> src/main/resources/application.properties
            echo "spring.profiles.active=dev" >> src/main/resources/application.properties

      - run:
          name: List files before compile
          command: ls -R src/

      - run:
          name: Compile the project
          command: ./gradlew compileKotlin

      - save_cache:
          paths:
            - ~/.gradle/caches/
            - ~/.gradle/wrapper/
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - persist_to_workspace:
          root: /home/circleci
          paths:
            - project

  test:
    executor: kotlin-executor
    steps:
      - attach_workspace:
          at: /home/circleci

      - run:
          name: List files after compile
          command: ls -R build/

      - run:
          name: Verify connection to Neo4j Test
          command: |
            echo "Verifying connection to Neo4j Test..."
            curl -i -u neo4j:bacco4321 http://localhost:7688/browser/

      - run:
          name: Verify connection to Neo4j Dev
          command: |
            echo "Verifying connection to Neo4j Dev..."
            curl -i -u neo4j:bacco4321 http://localhost:7474/browser/

      - run:
          name: Run tests with detailed logging
          command: |
            ./gradlew test --warning-mode all --info --debug -Dorg.slf4j.simple.SimpleLogger.LEVEL=DEBUG -Dorg.springframework.core.log.LogMessage.LEVEL_TRACE

      - store_artifacts:
          path: build/reports/tests/test
          destination: test-reports

workflows:
  version: 2
  build-and-test:
    jobs:
      - setup
      - build:
          requires:
            - setup
      - test:
          requires:
            - build